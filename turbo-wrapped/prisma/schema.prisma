// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ... existing configuration ...

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?  @db.Text
    access_token      String?  @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?  @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model User {
    id              String    @id @default(cuid())
    name            String?
    email           String?   @unique
    trackingEnabled Boolean   @default(false)
    accounts        Account[]           // Add this line
    listeningHistory ListeningHistory[]
}

model ListeningHistory {
    id          String   @id @default(cuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String
    trackId     String
    trackName   String
    artistName  String
    albumName   String
    genres      String[]
    playedAt    DateTime
    duration    Int
    source      String   @default("spotify")
    createdAt   DateTime @default(now())

    @@unique([userId, trackId, playedAt])
    @@index([userId])
    @@index([playedAt])
}
